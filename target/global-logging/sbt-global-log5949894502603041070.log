[debug] > Exec(;reload; set _root_.org.jetbrains.sbt.StructureKeys.sbtStructureOptions in Global := "download, resolveSourceClassifiers, insertProjectTransitiveDependencies" ;preferScala2;*/*:dumpStructureTo C:/Users/Owen/AppData/Local/Temp/sbt-structure.xml; session clear-all ; set ideaPort in Global := 57934, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.5.4 (Oracle Corporation Java 1.8.0_202)
[debug] Load.defaultLoad until apply took 4.710566ms
[debug]           Load.loadUnit: plugins took 132.141719ms
[debug]           Load.loadUnit: defsScala took 0.005132ms
[debug] [Loading] Scanning directory C:\brenda_tai\OrderSparkProject\project
[debug]             Load.loadUnit: mkEval took 0.900872ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\brenda_tai\OrderSparkProject\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 10.455433 ms
[info] loading settings for project ordersparkproject-build from idea.sbt ...
[debug]               Load.resolveProject(ordersparkproject-build) took 8.026204ms
[debug]             Load.loadTransitive: finalizeProject(Project(id ordersparkproject-build, base: C:\brenda_tai\OrderSparkProject\project, plugins: List(<none>))) took 20.163482ms
[debug] [Loading] Done in C:\brenda_tai\OrderSparkProject\project, returning: (ordersparkproject-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 91.365952ms
[debug]           Load.loadUnit: cleanEvalClasses took 4.978355ms
[debug]         Load.loadUnit(file:/C:/brenda_tai/OrderSparkProject/project/, ...) took 230.198663ms
[debug]       Load.apply: load took 233.899656ms
[debug]       Load.apply: resolveProjects took 0.205274ms
[debug]       Load.apply: finalTransforms took 12.226852ms
[debug]       Load.apply: config.delegates took 0.385355ms
[debug]       Load.apply: Def.make(settings)... took 120.180323ms
[debug]       Load.apply: structureIndex took 26.769565ms
[debug]       Load.apply: mkStreams took 0.004199ms
[info] loading project definition from C:\brenda_tai\OrderSparkProject\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 5218.742521ms
[debug]     Load.loadUnit: defsScala took 0.054584ms
[debug] [Loading] Scanning directory C:\brenda_tai\OrderSparkProject
[debug]       Load.loadUnit: mkEval took 45.375299ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\brenda_tai\OrderSparkProject, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 174.080082 ms
[info] loading settings for project ordersparkproject from build.sbt ...
[debug]         Load.resolveProject(ordersparkproject) took 1407.937283ms
[debug]       Load.loadTransitive: finalizeProject(Project(id ordersparkproject, base: C:\brenda_tai\OrderSparkProject, plugins: List(<none>))) took 1584.349089ms
[debug] [Loading] Done in C:\brenda_tai\OrderSparkProject, returning: (ordersparkproject)
[debug]     Load.loadUnit: loadedProjectsRaw took 6053.440225ms
[debug]     Load.loadUnit: cleanEvalClasses took 112.755478ms
[debug]   Load.loadUnit(file:/C:/brenda_tai/OrderSparkProject/, ...) took 11387.732747ms
[debug] Load.apply: load took 11391.212137ms
[debug] Load.apply: resolveProjects took 0.220669ms
[debug] Load.apply: finalTransforms took 101.693089ms
[debug] Load.apply: config.delegates took 0.664341ms
[debug] Load.apply: Def.make(settings)... took 166.046413ms
[debug] Load.apply: structureIndex took 113.074585ms
[debug] Load.apply: mkStreams took 0.003733ms
[warn] Discarding 1 session setting.  Use 'session save' to persist session settings.
[info] set current project to SparkTest (in build file:/C:/brenda_tai/OrderSparkProject/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(set _root_.org.jetbrains.sbt.StructureKeys.sbtStructureOptions in Global := "download, resolveSourceClassifiers, insertProjectTransitiveDependencies", None, None)
[info] Defining Global / sbtStructureOptions
[info] The new value will be used by Global / ssOptions
[debug] Defining 
[debug] 	Global / sbtStructureOptions
[debug] 
[debug] The new value will be used by 
[debug] 	Global / ssOptions
[info] Reapplying settings...
[info] set current project to SparkTest (in build file:/C:/brenda_tai/OrderSparkProject/)
[debug] > Exec(preferScala2, None, None)
[debug] > Exec(*/*:dumpStructureTo C:/Users/Owen/AppData/Local/Temp/sbt-structure.xml, None, None)
[debug] Evaluating tasks: Global / dumpStructureTo
[warn] sbt 0.13 shell syntax is deprecated; use slash syntax instead: Global / dumpStructureTo
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[info] Writing structure to C:\Users\Owen\AppData\Local\Temp\sbt-structure.xml...
[info] Done.
[success] Total time: 27 s, completed 29-Jun-2024 17:06:54
[debug] > Exec(session clear-all, None, None)
[info] Reapplying settings...
[info] set current project to SparkTest (in build file:/C:/brenda_tai/OrderSparkProject/)
[debug] > Exec(set ideaPort in Global := 57934, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by no settings or tasks.
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by no settings or tasks.
[info] Reapplying settings...
[info] set current project to SparkTest (in build file:/C:/brenda_tai/OrderSparkProject/)
[debug] > Exec(idea-shell, None, None)
