[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.5.4 (AdoptOpenJDK Java 1.8.0_275)
[debug]       Load.loadUnit: plugins took 368.535654ms
[debug]       Load.loadUnit: defsScala took 0.567063ms
[debug] [Loading] Scanning directory /Users/marshmello/.sbt/1.0/plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in /Users/marshmello/.sbt/1.0/plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 85.78303 ms
[debug]           Load.resolveProject(global-plugins) took 226.604282ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: /Users/marshmello/.sbt/1.0/plugins, plugins: List(<none>))) took 432.460625ms
[debug] [Loading] Done in /Users/marshmello/.sbt/1.0/plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 573.584997ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.476724ms
[debug]     Load.loadUnit(file:/Users/marshmello/.sbt/1.0/plugins/, ...) took 961.962842ms
[debug]   Load.apply: load took 1857.719339ms
[debug]   Load.apply: resolveProjects took 20.063042ms
[debug]   Load.apply: finalTransforms took 301.19572ms
[debug]   Load.apply: config.delegates took 25.808984ms
[debug]   Load.apply: Def.make(settings)... took 1218.51239ms
[debug]   Load.apply: structureIndex took 268.48043ms
[debug]   Load.apply: mkStreams took 6.922516ms
[info] loading global plugins from /Users/marshmello/.sbt/1.0/plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Forcing garbage collection...
[debug] Load.defaultLoad until apply took 761588.77747ms
[debug]           Load.loadUnit: plugins took 28.789867ms
[debug]           Load.loadUnit: defsScala took 0.00717ms
[debug] [Loading] Scanning directory /Users/marshmello/Downloads/SparkTestStarter/project
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in /Users/marshmello/Downloads/SparkTestStarter/project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 3.386143 ms
[debug]               Load.resolveProject(sparkteststarter-build) took 1.886908ms
[debug]             Load.loadTransitive: finalizeProject(Project(id sparkteststarter-build, base: /Users/marshmello/Downloads/SparkTestStarter/project, plugins: List(<none>))) took 6.178321ms
[debug] [Loading] Done in /Users/marshmello/Downloads/SparkTestStarter/project, returning: (sparkteststarter-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 9.392005ms
[debug]           Load.loadUnit: cleanEvalClasses took 0.010575ms
[debug]         Load.loadUnit(file:/Users/marshmello/Downloads/SparkTestStarter/project/, ...) took 39.085562ms
[debug]       Load.apply: load took 40.911338ms
[debug]       Load.apply: resolveProjects took 0.200209ms
[debug]       Load.apply: finalTransforms took 13.242462ms
[debug]       Load.apply: config.delegates took 0.566856ms
[debug]       Load.apply: Def.make(settings)... took 117.718443ms
[debug]       Load.apply: structureIndex took 42.991806ms
[debug]       Load.apply: mkStreams took 0.004574ms
[info] loading project definition from /Users/marshmello/Downloads/SparkTestStarter/project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 690.41212ms
[debug]     Load.loadUnit: defsScala took 0.003736ms
[debug] [Loading] Scanning directory /Users/marshmello/Downloads/SparkTestStarter
[debug]       Load.loadUnit: mkEval took 10.042934ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in /Users/marshmello/Downloads/SparkTestStarter, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 3.5585 ms
[info] loading settings for project sparkteststarter from build.sbt ...
[debug]         Load.resolveProject(sparkteststarter) took 4.551814ms
[debug]       Load.loadTransitive: finalizeProject(Project(id sparkteststarter, base: /Users/marshmello/Downloads/SparkTestStarter, plugins: List(<none>))) took 9.991286ms
[debug] [Loading] Done in /Users/marshmello/Downloads/SparkTestStarter, returning: (sparkteststarter)
[debug]     Load.loadUnit: loadedProjectsRaw took 9494.945744ms
[debug]     Load.loadUnit: cleanEvalClasses took 32.571745ms
[debug]   Load.loadUnit(file:/Users/marshmello/Downloads/SparkTestStarter/, ...) took 10219.006064ms
[debug] Load.apply: load took 10220.78194ms
[debug] Load.apply: resolveProjects took 0.136322ms
[debug] Load.apply: finalTransforms took 12.159919ms
[debug] Load.apply: config.delegates took 0.790116ms
[debug] Load.apply: Def.make(settings)... took 151.539916ms
[debug] Load.apply: structureIndex took 36.020591ms
[debug] Load.apply: mkStreams took 0.002914ms
[info] set current project to SparkTest (in build file:/Users/marshmello/Downloads/SparkTestStarter/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(shell, None, None)
[info] sbt server started at local:///Users/marshmello/.sbt/1.0/server/45c6e624c729ad367f18/sock
[debug] Writing bsp connection file
[info] started sbt server
